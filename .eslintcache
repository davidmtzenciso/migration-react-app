[{"C:\\Users\\r635253\\Documents\\git\\migration-tool-client\\src\\index.js":"1","C:\\Users\\r635253\\Documents\\git\\migration-tool-client\\src\\reportWebVitals.js":"2","C:\\Users\\r635253\\Documents\\git\\migration-tool-client\\src\\App.js":"3","C:\\Users\\r635253\\Documents\\git\\migration-tool-client\\src\\features\\migration\\migrationSlice.js":"4","C:\\Users\\r635253\\Documents\\git\\migration-tool-client\\src\\app\\store.js":"5","C:\\Users\\r635253\\Documents\\git\\migration-tool-client\\src\\features\\migration\\components\\Migration.js":"6","C:\\Users\\r635253\\Documents\\git\\migration-tool-client\\src\\features\\migration\\components\\SelectOption.js":"7","C:\\Users\\r635253\\Documents\\git\\migration-tool-client\\src\\features\\migration\\components\\styles.js":"8","C:\\Users\\r635253\\Documents\\git\\migration-tool-client\\src\\styles.js":"9","C:\\Users\\r635253\\Documents\\git\\migration-tool-client\\src\\features\\migration\\api.js":"10","C:\\Users\\r635253\\Documents\\git\\migration-tool-client\\src\\features\\migration\\initState.js":"11","C:\\Users\\r635253\\Documents\\git\\migration-tool-client\\src\\features\\migration\\components\\DataTable.js":"12"},{"size":503,"mtime":1622750833858,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"14"},{"size":1316,"mtime":1622755210898,"results":"16","hashOfConfig":"14"},{"size":2404,"mtime":1622754392757,"results":"17","hashOfConfig":"14"},{"size":240,"mtime":1622508984208,"results":"18","hashOfConfig":"14"},{"size":3570,"mtime":1622756869342,"results":"19","hashOfConfig":"14"},{"size":2125,"mtime":1622840570218,"results":"20","hashOfConfig":"14"},{"size":448,"mtime":1616444564668,"results":"21","hashOfConfig":"14"},{"size":204,"mtime":1615845065224,"results":"22","hashOfConfig":"14"},{"size":185,"mtime":1622514478012,"results":"23","hashOfConfig":"14"},{"size":951,"mtime":1622514678525,"results":"24","hashOfConfig":"14"},{"size":7405,"mtime":1622753321297,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"vm3qs2",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"28"},"C:\\Users\\r635253\\Documents\\git\\migration-tool-client\\src\\index.js",[],["52","53"],"C:\\Users\\r635253\\Documents\\git\\migration-tool-client\\src\\reportWebVitals.js",[],"C:\\Users\\r635253\\Documents\\git\\migration-tool-client\\src\\App.js",[],"C:\\Users\\r635253\\Documents\\git\\migration-tool-client\\src\\features\\migration\\migrationSlice.js",[],"C:\\Users\\r635253\\Documents\\git\\migration-tool-client\\src\\app\\store.js",[],"C:\\Users\\r635253\\Documents\\git\\migration-tool-client\\src\\features\\migration\\components\\Migration.js",[],"C:\\Users\\r635253\\Documents\\git\\migration-tool-client\\src\\features\\migration\\components\\SelectOption.js",[],"C:\\Users\\r635253\\Documents\\git\\migration-tool-client\\src\\features\\migration\\components\\styles.js",[],"C:\\Users\\r635253\\Documents\\git\\migration-tool-client\\src\\styles.js",[],"C:\\Users\\r635253\\Documents\\git\\migration-tool-client\\src\\features\\migration\\api.js",[],"C:\\Users\\r635253\\Documents\\git\\migration-tool-client\\src\\features\\migration\\initState.js",[],"C:\\Users\\r635253\\Documents\\git\\migration-tool-client\\src\\features\\migration\\components\\DataTable.js",["54","55","56","57","58","59","60","61"],"import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { createAction } from '@reduxjs/toolkit';\r\nimport { styles } from './styles';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead,\r\n         TableRow, TablePagination, TableSortLabel, Toolbar, Typography,\r\n         Checkbox, IconButton, Tooltip, FormControlLabel, Grid, Paper, withStyles\r\n      }  from '@material-ui/core';\r\n\r\nclass DataTable extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    console.log(\"datatable creation----\");\r\n    this.wrapper = React.createRef();\r\n    this.request = this.props.request;\r\n    this.metadata = this.props.metadata;\r\n    console.log(\"datatable.........................\");\r\n    this.name = this.props.name;\r\n    this.rows = []\r\n    this.order = \"asc\";\r\n    this.orderBy = \"\";\r\n    this.selected = [];\r\n    this.page = 0;\r\n    this.rowsPerPage = 10;\r\n\r\n    this.setData();\r\n    this.headCells = this.createHeadCells();\r\n    this.createHandlers();\r\n    this.propTypes = {\r\n     classes: PropTypes.object.isRequired,\r\n     numSelected: PropTypes.number.isRequired,\r\n     onRequestSort: PropTypes.func.isRequired,\r\n     onSelectAllClick: PropTypes.func.isRequired,\r\n     order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n     orderBy: PropTypes.string.isRequired,\r\n     rowCount: PropTypes.number.isRequired,\r\n    }\r\n\r\n  }\r\n\r\n  setData() {\r\n    if(this.name === \"data_from\") {\r\n      this.data = this.props.dataFrom;\r\n    } else if(this.name === \"data_to\") {\r\n      this.data = this.props.dataTo;\r\n    } else {\r\n      this.data = null;\r\n      console.log(\"prop name value not recognized: \" + this.name);\r\n    }\r\n  }\r\n\r\n  createHandlers() {\r\n    this.sortHandler = (property) => (event) => {\r\n      this.onRequestSort(event, property);\r\n    };\r\n\r\n    this.handleRequestSort = (event, property) => {\r\n        const isAsc = this.orderBy === property && this.order === 'asc';\r\n        this.order = (isAsc ? 'desc' : 'asc');\r\n        this.orderBy = property;\r\n      };\r\n\r\n  this.handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      this.selected = this.rows.map((n) => n.name);\r\n    } else {\r\n     this.selected = [];\r\n    }\r\n  };\r\n\r\n  this.handleClick = (event, name) => {\r\n    const selectedIndex = this.selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(this.selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(this.selected.slice(1));\r\n    } else if (selectedIndex === this.selected.length - 1) {\r\n      newSelected = newSelected.concat(this.selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        this.selected.slice(0, selectedIndex),\r\n        this.selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    this.selected = newSelected;\r\n  };\r\n\r\n  this.handleChangePage = (event, newPage) => {\r\n    this.page = newPage;\r\n  };\r\n\r\n  this.handleChangeRowsPerPage = (event) => {\r\n    this.RowsPerPage = parseInt(event.target.value, 10);\r\n    this.page = 0;\r\n  };\r\n\r\n  this.isSelected = (name) => this.selected.indexOf(name) !== -1;\r\n  this.emptyRows = this.rowsPerPage - Math.min(this.rowsPerPage, this.rows.length - this.page * this.rowsPerPage);\r\n\r\n  }\r\n\r\n  descendingComparator(a, b, orderBy) {\r\n    if (b[orderBy] < a[orderBy]) {\r\n      return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  getComparator(order, orderBy) {\r\n    return order === 'desc'\r\n      ? (a, b) => this.descendingComparator(a, b, orderBy)\r\n      : (a, b) => this.descendingComparator(a, b, orderBy);\r\n  }\r\n\r\n  stableSort(array, comparator) {\r\n    const stabilizedThis = array.map((el, index) => [el, index]);\r\n    stabilizedThis.sort((a, b) => {\r\n      const order = comparator(a[0], b[0]);\r\n      if (order !== 0) return order;\r\n      return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map((el) => el[0]);\r\n  }\r\n\r\n  createHeadCells() {\r\n    //{ id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\r\n\r\n    const schema_meta = this.metadata.schemas.find(schema => this.schema.name === this.request.schema);\r\n    const table_meta = schema_meta.tables.find(table => table.name === this.request.tableName);\r\n\r\n    return table_meta.map(meta => {\r\n        return {\r\n          key: meta.name, label: meta.name,  numeric: false\r\n        }\r\n    });\r\n  }\r\n\r\n\r\n  render() {\r\n    console.log(\"building table\");\r\n    return (\r\n          <TableContainer spacing={1} component={Paper}>\r\n            <Table className={this.props.classes.table} aria-label=\"simple table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  {this.headCells.map((headCell) => (\r\n                    <TableCell\r\n                      key={headCell.id}\r\n                      align={headCell.numeric ? 'right' : 'left'}\r\n                      padding=\"checkbox\"\r\n                      sortDirection={this.orderBy === headCell.id ? this.order : false}\r\n                    >\r\n                      <TableSortLabel\r\n                        active={this.orderBy === headCell.id}\r\n                        direction={this.orderBy === headCell.id ? this.order : 'asc'}\r\n                        onClick={this.createSortHandler(headCell.id)}\r\n                      >\r\n                        {headCell.label}\r\n                        {this.orderBy === headCell.id ? (\r\n                          <span className={this.classes.visuallyHidden}>\r\n                            {this.order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                          </span>\r\n                        ) : null}\r\n                      </TableSortLabel>\r\n                      <Checkbox\r\n                        indeterminate={this.numSelected > 0 && this.numSelected < this.rowCount}\r\n                        checked={this.rowCount > 0 && this.numSelected === this.rowCount}\r\n                        onChange={this.onSelectAllClick}\r\n                        inputProps={{ 'aria-label': 'select all desserts' }}\r\n                      />\r\n                    </TableCell>\r\n                  ))}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody key = { this.name + \"_\" + this.data.tableName }>\r\n                {this.createRows().map((row) => (\r\n                  <TableRow key = {row.name}>\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      {row.name}\r\n                    </TableCell>\r\n                    <TableCell align=\"right\">{row.calories}</TableCell>\r\n                    <TableCell align=\"right\">{row.fat}</TableCell>\r\n                    <TableCell align=\"right\">{row.carbs}</TableCell>\r\n                    <TableCell align=\"right\">{row.protein}</TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    metadata: state.migration.metadata,\r\n    request: state.migration.request,\r\n    dataFrom: state.migration.dataFrom,\r\n    dataTo: state.migration.dataTo\r\n  };\r\n};\r\n\r\nconst dispatchMapToAction = {\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, dispatchMapToAction),\r\n  withStyles(styles),\r\n)(DataTable);\r\n",{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":4,"column":10,"nodeType":"68","messageId":"69","endLine":4,"endColumn":22},{"ruleId":"66","severity":1,"message":"70","line":9,"column":20,"nodeType":"68","messageId":"69","endLine":9,"endColumn":35},{"ruleId":"66","severity":1,"message":"71","line":9,"column":53,"nodeType":"68","messageId":"69","endLine":9,"endColumn":60},{"ruleId":"66","severity":1,"message":"72","line":9,"column":62,"nodeType":"68","messageId":"69","endLine":9,"endColumn":72},{"ruleId":"66","severity":1,"message":"73","line":10,"column":20,"nodeType":"68","messageId":"69","endLine":10,"endColumn":30},{"ruleId":"66","severity":1,"message":"74","line":10,"column":32,"nodeType":"68","messageId":"69","endLine":10,"endColumn":39},{"ruleId":"66","severity":1,"message":"75","line":10,"column":41,"nodeType":"68","messageId":"69","endLine":10,"endColumn":57},{"ruleId":"66","severity":1,"message":"76","line":10,"column":59,"nodeType":"68","messageId":"69","endLine":10,"endColumn":63},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"no-unused-vars","'createAction' is defined but never used.","Identifier","unusedVar","'TablePagination' is defined but never used.","'Toolbar' is defined but never used.","'Typography' is defined but never used.","'IconButton' is defined but never used.","'Tooltip' is defined but never used.","'FormControlLabel' is defined but never used.","'Grid' is defined but never used.","no-global-assign","no-unsafe-negation"]